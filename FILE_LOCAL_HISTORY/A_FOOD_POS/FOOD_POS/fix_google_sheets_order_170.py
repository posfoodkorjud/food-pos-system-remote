#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sqlite3
import json
from google.oauth2.service_account import Credentials
import gspread
from datetime import datetime

# ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Google Sheets
with open('google_sheets_config.json', 'r', encoding='utf-8') as f:
    config = json.load(f)

# ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheets
creds = Credentials.from_service_account_file(
    'credentials.json',
    scopes=['https://www.googleapis.com/auth/spreadsheets']
)
client = gspread.authorize(creds)
sheet = client.open_by_key(config['spreadsheet_id']).worksheet('Orders')

# ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
conn = sqlite3.connect('pos_database.db')
cursor = conn.cursor()

# ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Order 170 ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤)
cursor.execute('''
    SELECT oi.order_item_id, oi.order_id, mi.name, oi.quantity, oi.total_price, 
           oi.created_at, oi.status, oi.customer_request
    FROM order_items oi 
    JOIN menu_items mi ON oi.item_id = mi.item_id 
    WHERE oi.order_id = 170 
    ORDER BY oi.created_at
''')

items = cursor.fetchall()
print(f'‡∏û‡∏ö Order 170 ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: {len(items)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£')

# ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Order 170 ‡πÄ‡∏Å‡πà‡∏≤‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å Google Sheets
all_data = sheet.get_all_values()
header = all_data[0] if all_data else []
filtered_data = [header]  # ‡πÄ‡∏Å‡πá‡∏ö header

# ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà Order 170
for row in all_data[1:]:
    if row and row[0] != '170':  # ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà Order 170
        filtered_data.append(row)

print(f'‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Order 170 ‡πÄ‡∏Å‡πà‡∏≤‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å Google Sheets')

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Order 170 ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
for item in items:
    order_id = str(item[1])
    created_at = datetime.strptime(item[5], '%Y-%m-%d %H:%M:%S').strftime('%d/%m/%Y %H:%M:%S')
    item_name = item[2]
    quantity = str(item[3])
    unit_price = str(int(item[4] / item[3]))  # ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢
    total_price = str(int(item[4]))  # ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°
    customer_request = item[7] or ''
    status = item[6]
    
    new_row = [order_id, created_at, item_name, quantity, unit_price, total_price, customer_request, customer_request, status]
    filtered_data.append(new_row)
    print(f'‡πÄ‡∏û‡∏¥‡πà‡∏°: {item_name} - {quantity} x {unit_price} = {total_price} ‡∏ö‡∏≤‡∏ó')

# ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Google Sheets
sheet.clear()
if filtered_data:
    sheet.update(range_name='A1', values=filtered_data)

print(f'\n‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Google Sheets ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!')
print(f'üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {len(filtered_data)-1} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏° header)')
print(f'üçΩÔ∏è Order 170: {len(items)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡∏£‡∏ß‡∏° {sum(item[4] for item in items)} ‡∏ö‡∏≤‡∏ó')

# ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Order 170 ‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
print('\nüìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Order 170 ‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏ô Google Sheets:')
for i, item in enumerate(items, 1):
    print(f'{i:2d}. {item[2]:<30} - {item[3]} x {int(item[4]/item[3])} = {int(item[4])} ‡∏ö‡∏≤‡∏ó')

conn.close()