import sqlite3
from datetime import datetime

def migrate_all_orders_except_rejected_auto():
    """‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏∏‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô rejected ‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á orders ‡πÑ‡∏õ‡∏¢‡∏±‡∏á order_history (‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥)"""
    conn = sqlite3.connect('pos_database.db')
    cursor = conn.cursor()
    
    try:
        # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏∏‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô rejected ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô order_history
        cursor.execute('''
            SELECT o.order_id, o.table_id, o.session_id, o.status, o.total_amount, 
                   o.created_at, o.completed_at
            FROM orders o
            WHERE o.status != 'rejected' 
            AND o.order_id NOT IN (SELECT order_id FROM order_history)
        ''')
        
        orders_to_migrate = cursor.fetchall()
        print(f"‡∏û‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏¢‡πâ‡∏≤‡∏¢ {len(orders_to_migrate)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô rejected)")
        
        if len(orders_to_migrate) == 0:
            print("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏¢‡πâ‡∏≤‡∏¢")
            return
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏¢‡πâ‡∏≤‡∏¢ (‡πÅ‡∏Ñ‡πà 10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏Å)
        print("\n=== ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏¢‡πâ‡∏≤‡∏¢ (‡πÅ‡∏™‡∏î‡∏á 10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏Å) ===")
        for i, order_row in enumerate(orders_to_migrate[:10]):
            order_id, table_id, session_id, status, total_amount, created_at, completed_at = order_row
            print(f"Order {order_id}: ‡πÇ‡∏ï‡πä‡∏∞ {table_id}, ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ {status}, ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏° {total_amount} ‡∏ö‡∏≤‡∏ó")
        
        if len(orders_to_migrate) > 10:
            print(f"... ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å {len(orders_to_migrate) - 10} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
        
        print("\nüîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...")
        
        migrated_count = 0
        total_items = 0
        
        for order_row in orders_to_migrate:
            order_id = order_row[0]
            
            # ‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á order_history
            cursor.execute('''
                INSERT INTO order_history (order_id, table_id, session_id, status, total_amount, 
                                          created_at, completed_at)
                VALUES (?, ?, ?, ?, ?, ?, ?)
            ''', order_row)
            
            # ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÉ‡∏ô‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå
            cursor.execute('''
                SELECT oi.order_id, oi.item_id, oi.quantity, oi.unit_price, oi.customer_request
                FROM order_items oi
                WHERE oi.order_id = ?
            ''', (order_id,))
            
            order_items = cursor.fetchall()
            
            # ‡∏¢‡πâ‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÑ‡∏õ‡∏¢‡∏±‡∏á order_history_items
            for item_row in order_items:
                cursor.execute('''
                    INSERT INTO order_history_items (order_id, menu_item_id, quantity, price, customer_request)
                    VALUES (?, ?, ?, ?, ?)
                ''', item_row)
            
            migrated_count += 1
            total_items += len(order_items)
            
            # ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏∏‡∏Å 10 ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå
            if migrated_count % 10 == 0:
                print(f"‡∏¢‡πâ‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß {migrated_count}/{len(orders_to_migrate)} ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå")
        
        conn.commit()
        print(f"\n‚úÖ ‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!")
        print(f"üìä ‡∏¢‡πâ‡∏≤‡∏¢‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {migrated_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
        print(f"üçΩÔ∏è ‡∏¢‡πâ‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {total_items} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
        cursor.execute('SELECT COUNT(*) FROM order_history')
        history_count = cursor.fetchone()[0]
        
        cursor.execute('SELECT COUNT(*) FROM order_history_items')
        history_items_count = cursor.fetchone()[0]
        
        cursor.execute('SELECT COUNT(*) FROM orders WHERE status != "rejected"')
        remaining_orders = cursor.fetchone()[0]
        
        print(f"\n=== ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå ===")
        print(f"üìà ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô order_history: {history_count} ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå")
        print(f"üìà ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô order_history_items: {history_items_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
        print(f"üìâ ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á orders (‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô rejected): {remaining_orders} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á orders (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        if remaining_orders > 0:
            cursor.execute('''
                SELECT order_id, status, total_amount, created_at
                FROM orders 
                WHERE status != 'rejected'
                ORDER BY order_id DESC
                LIMIT 10
            ''')
            
            remaining_orders_list = cursor.fetchall()
            print("\n=== ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á orders (‡πÅ‡∏™‡∏î‡∏á 10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î) ===")
            for order in remaining_orders_list:
                order_id, status, total_amount, created_at = order
                print(f"Order {order_id}: ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ {status}, ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏° {total_amount} ‡∏ö‡∏≤‡∏ó, ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ {created_at}")
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÉ‡∏ô order_history
        cursor.execute('''
            SELECT COUNT(*) FROM order_history 
            WHERE DATE(created_at) = DATE('now', 'localtime')
        ''')
        today_history_count = cursor.fetchone()[0]
        print(f"\nüóìÔ∏è ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÉ‡∏ô order_history: {today_history_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        conn.rollback()
    finally:
        conn.close()

if __name__ == "__main__":
    migrate_all_orders_except_rejected_auto()