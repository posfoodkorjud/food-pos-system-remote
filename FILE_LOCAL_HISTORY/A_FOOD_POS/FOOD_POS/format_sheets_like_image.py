#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Google Sheets ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏ô‡∏ö‡∏°‡∏≤
"""

import sqlite3
import json
from google.oauth2.service_account import Credentials
import gspread
from datetime import datetime
from collections import defaultdict

def format_sheets_like_image():
    """
    ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Google Sheets ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏ô‡∏ö‡∏°‡∏≤
    """
    try:
        # ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Google Sheets
        with open('google_sheets_config.json', 'r', encoding='utf-8') as f:
            config = json.load(f)
        
        if not config.get('enabled', False):
            print("‚ùå Google Sheets ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
            return False
        
        # ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheets
        creds = Credentials.from_service_account_file(
            'credentials.json',
            scopes=['https://www.googleapis.com/auth/spreadsheets']
        )
        client = gspread.authorize(creds)
        sheet = client.open_by_key(config['spreadsheet_id']).worksheet('Orders')
        
        print("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Google Sheets ‡∏ï‡∏≤‡∏°‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏ö‡∏°‡∏≤...")
        
        # ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        conn = sqlite3.connect('pos_database.db')
        cursor = conn.cursor()
        
        # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß
        cursor.execute('''
            SELECT o.order_id, o.table_id, o.created_at, o.total_amount, o.status, o.completed_at,
                   mi.name, oi.quantity, oi.unit_price, oi.total_price, oi.customer_request
            FROM orders o
            JOIN order_items oi ON o.order_id = oi.order_id
            JOIN menu_items mi ON oi.item_id = mi.item_id
            WHERE o.status = 'completed'
            ORDER BY o.order_id DESC, oi.created_at ASC
        ''')
        
        all_items = cursor.fetchall()
        conn.close()
        
        if not all_items:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô")
            return False
        
        # ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏° Order ID
        orders_grouped = defaultdict(list)
        for item in all_items:
            order_id = item[0]
            orders_grouped[order_id].append(item)
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á header ‡∏ï‡∏≤‡∏°‡∏†‡∏≤‡∏û
        header = [
            'Order ID',
            '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà-‡πÄ‡∏ß‡∏•‡∏≤', 
            '‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤',
            '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô',
            '‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢ (‡∏ö‡∏≤‡∏ó)',
            '‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏° (‡∏ö‡∏≤‡∏ó)',
            '‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏û‡∏¥‡πÄ‡∏®‡∏©',
            '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏',
            '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞'
        ]
        
        # ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Google Sheets
        formatted_data = [header]
        
        # ‡∏™‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞ Order (‡∏ï‡∏≤‡∏°‡∏†‡∏≤‡∏û)
        colors = [
            {'light': {'red': 1.0, 'green': 0.9, 'blue': 0.8}, 'dark': {'red': 1.0, 'green': 0.7, 'blue': 0.4}},  # ‡∏™‡πâ‡∏°
            {'light': {'red': 0.8, 'green': 1.0, 'blue': 0.8}, 'dark': {'red': 0.6, 'green': 0.9, 'blue': 0.6}},  # ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
            {'light': {'red': 0.8, 'green': 0.9, 'blue': 1.0}, 'dark': {'red': 0.6, 'green': 0.8, 'blue': 1.0}},  # ‡∏ü‡πâ‡∏≤
            {'light': {'red': 0.95, 'green': 0.8, 'blue': 1.0}, 'dark': {'red': 0.9, 'green': 0.6, 'blue': 1.0}}, # ‡∏°‡πà‡∏ß‡∏á
            {'light': {'red': 1.0, 'green': 0.9, 'blue': 0.95}, 'dark': {'red': 1.0, 'green': 0.7, 'blue': 0.8}}, # ‡∏ä‡∏°‡∏û‡∏π
            {'light': {'red': 1.0, 'green': 1.0, 'blue': 0.8}, 'dark': {'red': 1.0, 'green': 0.9, 'blue': 0.5}}   # ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á
        ]
        
        # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ‡πÉ‡∏´‡πâ‡πÅ‡∏ï‡πà‡∏•‡∏∞ Order
        order_colors = {}
        color_index = 0
        sorted_orders = sorted(orders_grouped.keys(), reverse=True)
        
        for order_id in sorted_orders:
            order_colors[order_id] = colors[color_index % len(colors)]
            color_index += 1
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞ Order
        for order_id in sorted_orders:
            items = orders_grouped[order_id]
            total_quantity = 0
            total_amount = 0
            
            # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
            for item in items:
                order_id, table_id, created_at, order_total, status, completed_at, item_name, quantity, unit_price, item_total, customer_request = item
                
                # ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
                try:
                    if completed_at:
                        dt = datetime.strptime(completed_at, '%Y-%m-%d %H:%M:%S')
                    else:
                        dt = datetime.strptime(created_at, '%Y-%m-%d %H:%M:%S')
                    formatted_date = dt.strftime('%d/%m/%Y %H:%M:%S')
                except:
                    formatted_date = created_at or ''
                
                # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ñ‡∏ß‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                row = [
                    str(order_id),
                    formatted_date,
                    item_name or '',
                    str(quantity),
                    str(int(unit_price)) if unit_price else '',
                    str(int(item_total)) if item_total else '',
                    customer_request or '-',
                    '-',  # ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
                    '‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£' if status != 'completed' else '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô'
                ]
                
                formatted_data.append(row)
                total_quantity += quantity
                total_amount += item_total
            
            # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ñ‡∏ß‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î
            summary_row = [
                f'‡∏™‡∏£‡∏∏‡∏õ Order {order_id}',
                '',
                f'‡∏£‡∏ß‡∏° {len(items)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£',
                str(total_quantity),
                '',
                str(int(total_amount)),
                '',
                '',
                ''
            ]
            formatted_data.append(summary_row)
        
        # ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        print("üìù ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á Google Sheets...")
        sheet.clear()
        sheet.update('A1', formatted_data)
        
        # ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Header
        print("üé® ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Header...")
        sheet.format('A1:I1', {
            'textFormat': {
                'bold': True,
                'fontSize': 12,
                'foregroundColor': {'red': 1.0, 'green': 1.0, 'blue': 1.0}
            },
            'backgroundColor': {
                'red': 0.2, 
                'green': 0.4, 
                'blue': 0.8
            },
            'horizontalAlignment': 'CENTER',
            'verticalAlignment': 'MIDDLE'
        })
        
        # ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÅ‡∏ñ‡∏ß
        print("üåà ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏™‡πà‡∏™‡∏µ‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...")
        current_order_id = None
        
        for i, row in enumerate(formatted_data[1:], start=2):  # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡πÅ‡∏ñ‡∏ß 2
            if len(row) > 0 and row[0]:
                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ñ‡∏ß‡∏™‡∏£‡∏∏‡∏õ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                if row[0].startswith('‡∏™‡∏£‡∏∏‡∏õ Order'):
                    # ‡πÅ‡∏¢‡∏Å Order ID ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏£‡∏∏‡∏õ
                    try:
                        order_id = int(row[0].replace('‡∏™‡∏£‡∏∏‡∏õ Order ', ''))
                        if order_id in order_colors:
                            # ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÅ‡∏ñ‡∏ß‡∏™‡∏£‡∏∏‡∏õ (‡∏™‡∏µ‡πÄ‡∏Ç‡πâ‡∏° + ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏≤ + ‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á)
                            sheet.format(f'A{i}:I{i}', {
                                'textFormat': {
                                    'bold': True,
                                    'fontSize': 11,
                                    'foregroundColor': {'red': 1.0, 'green': 1.0, 'blue': 1.0}
                                },
                                'backgroundColor': order_colors[order_id]['dark'],
                                'horizontalAlignment': 'CENTER',
                                'verticalAlignment': 'MIDDLE'
                            })
                    except ValueError:
                        pass
                else:
                    # ‡πÅ‡∏ñ‡∏ß‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                    try:
                        order_id = int(row[0])
                        current_order_id = order_id
                        if order_id in order_colors:
                            # ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÅ‡∏ñ‡∏ß‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏™‡∏µ‡∏≠‡πà‡∏≠‡∏ô + ‡πÑ‡∏°‡πà‡∏´‡∏ô‡∏≤ + ‡∏ä‡∏¥‡∏î‡∏ã‡πâ‡∏≤‡∏¢)
                            sheet.format(f'A{i}:I{i}', {
                                'textFormat': {
                                    'bold': False,
                                    'fontSize': 10
                                },
                                'backgroundColor': order_colors[order_id]['light'],
                                'horizontalAlignment': 'LEFT',
                                'verticalAlignment': 'MIDDLE'
                            })
                            
                            # ‡∏à‡∏±‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡πâ‡∏ä‡∏¥‡∏î‡∏Ç‡∏ß‡∏≤
                            sheet.format(f'D{i}:F{i}', {
                                'horizontalAlignment': 'RIGHT'
                            })
                    except ValueError:
                        # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô int ‡πÑ‡∏î‡πâ ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡∏Ç‡∏≠‡∏á Order ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
                        if current_order_id and current_order_id in order_colors:
                            sheet.format(f'A{i}:I{i}', {
                                'textFormat': {
                                    'bold': False,
                                    'fontSize': 10
                                },
                                'backgroundColor': order_colors[current_order_id]['light'],
                                'horizontalAlignment': 'LEFT',
                                'verticalAlignment': 'MIDDLE'
                            })
        
        # ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
        print("üìè ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå...")
        sheet.columns_auto_resize(0, 8)  # ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå A-I ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
        
        print(f"‚úÖ ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Google Sheets ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!")
        print(f"üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Orders: {len(orders_grouped)}")
        print(f"üìù ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {len(all_items)}")
        print(f"üîó ‡∏•‡∏¥‡∏á‡∏Å‡πå: https://docs.google.com/spreadsheets/d/{config['spreadsheet_id']}/edit")
        
        return True
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        return False

if __name__ == "__main__":
    print("üé® ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö Google Sheets ‡∏ï‡∏≤‡∏°‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏ö‡∏°‡∏≤")
    print("=" * 60)
    
    success = format_sheets_like_image()
    
    if success:
        print("\nüéâ ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! Google Sheets ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß")
    else:
        print("\n‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö")