#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÅ‡∏ö‡∏ö‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡∏∞‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
"""

import requests
import json
import sqlite3
import time

def test_complete_order():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡πà‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡∏∞‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏"""
    print("üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡πà‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÅ‡∏ö‡∏ö‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå")
    print("=" * 50)
    
    # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ó‡∏±‡πâ‡∏á selected_option ‡πÅ‡∏•‡∏∞ notes
    order_data = {
        "table_id": 99,
        "items": [
            {
                "item_id": 1,
                "quantity": 1,
                "selected_option": "‡∏´‡∏ß‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥",
                "notes": "‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡∏ú‡∏±‡∏Å‡∏ä‡∏µ"
            },
            {
                "item_id": 8,
                "quantity": 2,
                "selected_option": "‡πÄ‡∏ú‡πá‡∏î‡∏ô‡πâ‡∏≠‡∏¢",
                "notes": "‡πÉ‡∏™‡πà‡πÑ‡∏Ç‡πà‡∏î‡∏≤‡∏ß 2 ‡∏ü‡∏≠‡∏á"
            },
            {
                "item_id": 3,
                "quantity": 1,
                "notes": "‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡∏´‡∏≠‡∏°"
                # ‡πÑ‡∏°‡πà‡∏°‡∏µ selected_option
            },
            {
                "item_id": 5,
                "quantity": 1,
                "selected_option": "‡∏´‡∏ß‡∏≤‡∏ô‡∏°‡∏≤‡∏Å"
                # ‡πÑ‡∏°‡πà‡∏°‡∏µ notes
            }
        ]
    }
    
    print(f"üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á:")
    print(json.dumps(order_data, indent=2, ensure_ascii=False))
    print()
    
    try:
        # ‡∏™‡πà‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå
        response = requests.post(
            'http://localhost:5000/api/orders',
            json=order_data,
            headers={'Content-Type': 'application/json'},
            timeout=10
        )
        
        print(f"üì® Response Status: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print(f"üì® Response: {json.dumps(result, indent=2, ensure_ascii=False)}")
            
            order_id = result.get('data', {}).get('order_id')
            if order_id:
                print(f"\n‚úÖ ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! Order ID: {order_id}")
                
                # ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
                print("\n‚è≥ ‡∏£‡∏≠ 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï...")
                time.sleep(2)
                
                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                check_order_in_database(order_id)
                
            else:
                print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö order_id ‡πÉ‡∏ô response")
        else:
            print(f"‚ùå API Error: {response.status_code}")
            print(f"Response: {response.text}")
            
    except Exception as e:
        print(f"‚ùå Request Error: {e}")

def check_order_in_database(order_id):
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"""
    print(f"\nüîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Order ID: {order_id}")
    
    try:
        conn = sqlite3.connect('pos_database.db')
        conn.row_factory = sqlite3.Row
        cursor = conn.cursor()
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å
        cursor.execute("SELECT * FROM orders WHERE order_id = ?", (order_id,))
        order = cursor.fetchone()
        
        if order:
            print(f"‚úÖ ‡∏û‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:")
            print(f"   Order ID: {order['order_id']}")
            print(f"   Table ID: {order['table_id']}")
            print(f"   Status: {order['status']}")
            print(f"   Total Amount: {order['total_amount']}")
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£
            cursor.execute("""
                SELECT oi.*, mi.name as item_name 
                FROM order_items oi 
                JOIN menu_items mi ON oi.item_id = mi.item_id 
                WHERE oi.order_id = ?
                ORDER BY oi.order_item_id
            """, (order_id,))
            
            items = cursor.fetchall()
            print(f"\nüìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ({len(items)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£):")
            
            for i, item in enumerate(items, 1):
                print(f"\n   {i}. {item['item_name']}")
                print(f"      Quantity: {item['quantity']}")
                print(f"      Unit Price: {item['unit_price']}")
                print(f"      Total Price: {item['total_price']}")
                print(f"      Customer Request: '{item['customer_request']}'")
                print(f"      Status: {item['status']}")
                
                # ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå customer request
                if item['customer_request']:
                    parts = item['customer_request'].split(' | ')
                    print(f"      Customer Request Parts: {parts}")
                else:
                    print(f"      ‚ö†Ô∏è  Special Request ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤!")
                
        else:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå ID {order_id} ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå Database Error: {e}")

if __name__ == "__main__":
    test_complete_order()