#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á Google Sheets ‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢‡πÑ‡∏õ
"""

import sys
import os

# ‡πÄ‡∏û‡∏¥‡πà‡∏° path ‡∏Ç‡∏≠‡∏á backend
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

from google_sheets import (
    google_sheets_manager,
    is_google_sheets_enabled
)

def create_missing_sheets():
    """
    ‡∏™‡∏£‡πâ‡∏≤‡∏á sheets ‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢‡πÑ‡∏õ
    """
    if not is_google_sheets_enabled():
        print("‚ùå Google Sheets ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
        return False
    
    try:
        # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• spreadsheet ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
        spreadsheet = google_sheets_manager.service.spreadsheets().get(
            spreadsheetId=google_sheets_manager.spreadsheet_id
        ).execute()
        
        existing_sheets = [sheet['properties']['title'] for sheet in spreadsheet.get('sheets', [])]
        print(f"üìã Sheets ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà: {existing_sheets}")
        
        # ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ sheets ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
        required_sheets = {
            'Orders': [
                'Order ID', 'Table Number', 'Session ID', 'Status', 'Total Amount (‡∏ø)', 
                'Payment Method', 'Customer Count', 'Order Type', 'Created Date', 
                'Created Time', 'Completed Date', 'Completed Time', 'Duration (min)', 'Updated At'
            ],
            'Order_Items': [
                'Order Item ID', 'Order ID', 'Item ID', 'Category', 'Item Name', 
                'Quantity', 'Unit Price (‡∏ø)', 'Total Price (‡∏ø)', 'Discount (%)', 
                'Final Price (‡∏ø)', 'Customer Request', 'Special Options', 'Status', 'Created At'
            ],
            'Daily_Summary': [
                'Date', 'Day of Week', 'Total Orders', 'Completed Orders', 'Cancelled Orders',
                'Total Revenue (‡∏ø)', 'Total Items Sold', 'Average Order Value (‡∏ø)', 
                'Peak Hour', 'Most Popular Item', 'Total Tables Served', 
                'Average Service Time (min)', 'Updated At'
            ],
            'Monthly_Summary': [
                'Month-Year', 'Total Orders', 'Total Revenue (‡∏ø)', 'Average Daily Revenue (‡∏ø)',
                'Best Day', 'Worst Day', 'Growth Rate (%)', 'Top 3 Items', 'Updated At'
            ],
            'Item_Analytics': [
                'Item Name', 'Category', 'Total Sold', 'Total Revenue (‡∏ø)', 
                'Average Price (‡∏ø)', 'Popularity Rank', 'Last Ordered', 
                'Frequency Score', 'Profit Margin (%)', 'Updated At'
            ]
        }
        
        requests = []
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á sheets ‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢‡πÑ‡∏õ
        for sheet_name, headers in required_sheets.items():
            if sheet_name not in existing_sheets:
                print(f"üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á sheet: {sheet_name}")
                requests.append({
                    'addSheet': {
                        'properties': {
                            'title': sheet_name,
                            'gridProperties': {
                                'rowCount': 1000,
                                'columnCount': len(headers)
                            }
                        }
                    }
                })
        
        # ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á sheets
        if requests:
            response = google_sheets_manager.service.spreadsheets().batchUpdate(
                spreadsheetId=google_sheets_manager.spreadsheet_id,
                body={'requests': requests}
            ).execute()
            print(f"‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á {len(requests)} sheets ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á headers ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å sheet
        for sheet_name, headers in required_sheets.items():
            try:
                range_name = f"{sheet_name}!A1:{chr(65 + len(headers) - 1)}1"
                body = {
                    'values': [headers]
                }
                
                google_sheets_manager.service.spreadsheets().values().update(
                    spreadsheetId=google_sheets_manager.spreadsheet_id,
                    range=range_name,
                    valueInputOption='RAW',
                    body=body
                ).execute()
                print(f"‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á headers ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {sheet_name} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
                
            except Exception as e:
                print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á headers ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {sheet_name}: {e}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á sheets: {e}")
        return False

def add_sample_data():
    """
    ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ï‡∏≤‡∏°‡∏†‡∏≤‡∏û
    """
    if not is_google_sheets_enabled():
        print("‚ùå Google Sheets ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
        return False
    
    try:
        # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Orders
        orders_data = [[
            171, 1, "session_171", "‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô", 869, "‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î", 2, "Dine-in",
            "2025-01-10", "10:30:00", "2025-01-10", "10:45:00", 15, "2025-01-10 10:45:30"
        ]]
        
        google_sheets_manager.service.spreadsheets().values().update(
            spreadsheetId=google_sheets_manager.spreadsheet_id,
            range="Orders!A2:N2",
            valueInputOption='RAW',
            body={'values': orders_data}
        ).execute()
        print("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Orders ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        
        # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Order_Items
        items_data = [
            [1, 171, 1, "‡πÄ‡∏°‡∏ô‡∏π‡∏Ç‡πâ‡∏≤‡∏ß", "‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏∞‡πÄ‡∏û‡∏£‡∏≤‡∏ó‡∏∞‡πÄ‡∏•", 1, 59, 59, 0, 59, "‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡∏´‡∏≠‡∏°", "‡πÄ‡∏ú‡πá‡∏î‡∏ô‡πâ‡∏≠‡∏¢", "‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô", "2025-01-10 10:30:15"],
            [2, 171, 2, "‡πÄ‡∏°‡∏ô‡∏π‡∏Ç‡πâ‡∏≤‡∏ß", "‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏∞‡πÄ‡∏û‡∏£‡∏≤‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö", 1, 49, 49, 0, 49, "", "‡πÄ‡∏ú‡πá‡∏î‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á", "‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô", "2025-01-10 10:30:20"],
            [3, 171, 3, "‡πÄ‡∏°‡∏ô‡∏π‡∏Ç‡πâ‡∏≤‡∏ß", "‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏∞‡πÄ‡∏û‡∏£‡∏≤‡πÑ‡∏Å‡πà", 1, 49, 49, 0, 49, "", "‡πÄ‡∏ú‡πá‡∏î‡∏ô‡πâ‡∏≠‡∏¢", "‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô", "2025-01-10 10:30:25"],
            [4, 171, 4, "‡πÄ‡∏°‡∏ô‡∏π‡∏Ç‡πâ‡∏≤‡∏ß", "‡∏Ç‡πâ‡∏≤‡∏ß‡∏õ‡∏±‡∏Å‡πÉ‡∏ï‡πâ‡∏´‡∏≠‡∏¢‡∏•‡∏≤‡∏¢", 1, 49, 49, 0, 49, "‡πÑ‡∏°‡πà‡πÄ‡∏ú‡πá‡∏î", "", "‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô", "2025-01-10 10:30:30"],
            [5, 171, 5, "‡πÄ‡∏°‡∏ô‡∏π‡∏Ç‡πâ‡∏≤‡∏ß", "‡∏Ç‡πâ‡∏≤‡∏ß‡∏õ‡∏±‡∏Å‡πÉ‡∏ï‡πâ‡∏ú‡∏±‡∏î‡∏û‡∏£‡∏¥‡∏Å‡πÅ‡∏Å‡∏á", 1, 49, 49, 0, 49, "", "‡πÄ‡∏ú‡πá‡∏î‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á", "‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô", "2025-01-10 10:30:35"],
            [6, 171, 6, "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°", "‡∏ä‡∏≤‡∏•‡∏¥‡πâ‡∏°", 1, 59, 59, 0, 59, "‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏á", "‡∏´‡∏ß‡∏≤‡∏ô‡∏ô‡πâ‡∏≠‡∏¢", "‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô", "2025-01-10 10:30:40"],
            [7, 171, 7, "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°", "‡∏ä‡∏≤‡∏•‡∏¥‡πâ‡∏° (‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ß‡∏≤‡∏ô)", 1, 59, 59, 0, 59, "", "‡∏´‡∏ß‡∏≤‡∏ô‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á", "‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô", "2025-01-10 10:30:45"],
            [8, 171, 8, "‡πÄ‡∏°‡∏ô‡∏π‡∏Ç‡πâ‡∏≤‡∏ß", "‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏∞‡πÄ‡∏û‡∏£‡∏≤‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö (‡πÄ‡∏ú‡πá‡∏î‡∏°‡∏≤‡∏Å)", 1, 59, 59, 0, 59, "‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡∏ú‡∏±‡∏Å", "‡πÄ‡∏ú‡πá‡∏î‡∏°‡∏≤‡∏Å", "‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô", "2025-01-10 10:30:50"]
        ]
        
        google_sheets_manager.service.spreadsheets().values().update(
            spreadsheetId=google_sheets_manager.spreadsheet_id,
            range="Order_Items!A2:N9",
            valueInputOption='RAW',
            body={'values': items_data}
        ).execute()
        print("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Order_Items ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        
        # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Daily_Summary
        daily_data = [[
            "2025-01-10", "‡∏ß‡∏±‡∏ô‡∏®‡∏∏‡∏Å‡∏£‡πå", 25, 23, 2, 2500.00, 45, 108.70,
            "12:00-13:00", "‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏Å‡∏∏‡πâ‡∏á", 15, 18, "2025-01-10 23:59:59"
        ]]
        
        google_sheets_manager.service.spreadsheets().values().update(
            spreadsheetId=google_sheets_manager.spreadsheet_id,
            range="Daily_Summary!A2:M2",
            valueInputOption='RAW',
            body={'values': daily_data}
        ).execute()
        print("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Daily_Summary ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        
        return True
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: {e}")
        return False

def format_all_sheets():
    """
    ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏∏‡∏Å sheets
    """
    if not is_google_sheets_enabled():
        print("‚ùå Google Sheets ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
        return False
    
    try:
        spreadsheet = google_sheets_manager.service.spreadsheets().get(
            spreadsheetId=google_sheets_manager.spreadsheet_id
        ).execute()
        
        requests = []
        
        for sheet in spreadsheet.get('sheets', []):
            sheet_id = sheet['properties']['sheetId']
            
            # ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á
            requests.append({
                'repeatCell': {
                    'range': {
                        'sheetId': sheet_id,
                        'startRowIndex': 0,
                        'endRowIndex': 1
                    },
                    'cell': {
                        'userEnteredFormat': {
                            'backgroundColor': {
                                'red': 0.2,
                                'green': 0.6,
                                'blue': 0.9
                            },
                            'textFormat': {
                                'foregroundColor': {
                                    'red': 1.0,
                                    'green': 1.0,
                                    'blue': 1.0
                                },
                                'fontSize': 11,
                                'bold': True
                            },
                            'horizontalAlignment': 'CENTER'
                        }
                    },
                    'fields': 'userEnteredFormat(backgroundColor,textFormat,horizontalAlignment)'
                }
            })
            
            # ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
            requests.append({
                'autoResizeDimensions': {
                    'dimensions': {
                        'sheetId': sheet_id,
                        'dimension': 'COLUMNS',
                        'startIndex': 0,
                        'endIndex': 20
                    }
                }
            })
        
        if requests:
            google_sheets_manager.service.spreadsheets().batchUpdate(
                spreadsheetId=google_sheets_manager.spreadsheet_id,
                body={'requests': requests}
            ).execute()
            print("‚úÖ ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏∏‡∏Å sheets ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        
        return True
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: {e}")
        return False

def main():
    """
    ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å
    """
    print("=" * 60)
    print("üîß Google Sheets Fixer & Data Creator")
    print("=" * 60)
    
    if not is_google_sheets_enabled():
        print("‚ùå Google Sheets ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
        return False
    
    print(f"‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheets ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
    print(f"üìä Spreadsheet ID: {google_sheets_manager.spreadsheet_id}")
    print()
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á sheets ‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢‡πÑ‡∏õ
    print("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á sheets ‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢‡πÑ‡∏õ...")
    if create_missing_sheets():
        print("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á sheets ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
    
    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    print("\nüìù ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á...")
    if add_sample_data():
        print("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
    
    # ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö
    print("\nüé® ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö...")
    if format_all_sheets():
        print("‚úÖ ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
    
    print("\nüéâ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
    print("\nüîó ‡πÄ‡∏õ‡∏¥‡∏î Google Sheets:")
    print(f"   https://docs.google.com/spreadsheets/d/{google_sheets_manager.spreadsheet_id}/edit")
    
    print("\nüìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á:")
    print("   ‚Ä¢ Order ID 171 - ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÇ‡∏ï‡πä‡∏∞ 1")
    print("   ‚Ä¢ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£ 8 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏° 869 ‡∏ö‡∏≤‡∏ó)")
    print("   ‚Ä¢ ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô")
    print("   ‚Ä¢ Headers ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å sheets")
    
    print("\n" + "=" * 60)
    print("üèÅ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£")
    print("=" * 60)

if __name__ == "__main__":
    main()