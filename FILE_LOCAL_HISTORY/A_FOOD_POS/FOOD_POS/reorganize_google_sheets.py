#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sqlite3
import json
from google.oauth2.service_account import Credentials
import gspread
from datetime import datetime

# ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Google Sheets
with open('google_sheets_config.json', 'r', encoding='utf-8') as f:
    config = json.load(f)

# ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheets
creds = Credentials.from_service_account_file(
    'credentials.json',
    scopes=['https://www.googleapis.com/auth/spreadsheets']
)
client = gspread.authorize(creds)
sheet = client.open_by_key(config['spreadsheet_id']).worksheet('Orders')

# ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
conn = sqlite3.connect('pos_database.db')
cursor = conn.cursor()

print("üîß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö Google Sheets ‡πÉ‡∏´‡∏°‡πà...")

# ‡∏™‡∏£‡πâ‡∏≤‡∏á header ‡∏ó‡∏µ‡πà‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°
header = [
    'Order ID',
    '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà-‡πÄ‡∏ß‡∏•‡∏≤', 
    '‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤',
    '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô',
    '‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢ (‡∏ö‡∏≤‡∏ó)',
    '‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏° (‡∏ö‡∏≤‡∏ó)',
    '‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏û‡∏¥‡πÄ‡∏®‡∏©',
    '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏',
    '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞'
]

# ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
cursor.execute('''
    SELECT o.order_id, o.created_at as order_date, mi.name, oi.quantity, 
           oi.unit_price, oi.total_price, oi.customer_request, oi.status,
           oi.created_at as item_created_at
    FROM orders o
    JOIN order_items oi ON o.order_id = oi.order_id
    JOIN menu_items mi ON oi.item_id = mi.item_id
    WHERE o.status = 'completed'
    ORDER BY o.order_id ASC, oi.created_at ASC
''')

all_items = cursor.fetchall()
print(f"üìä ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {len(all_items)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")

# ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö
formatted_data = [header]

for item in all_items:
    order_id = str(item[0])
    # ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏ó‡∏¢
    order_date = datetime.strptime(item[1], '%Y-%m-%d %H:%M:%S').strftime('%d/%m/%Y %H:%M:%S')
    item_name = item[2]
    quantity = str(item[3])
    unit_price = f"{int(item[4])}"
    total_price = f"{int(item[5])}"
    customer_request = item[6] or '-'
    notes = customer_request if customer_request != '-' else '-'
    status = '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô'
    
    new_row = [
        order_id,
        order_date, 
        item_name,
        quantity,
        unit_price,
        total_price,
        customer_request,
        notes,
        status
    ]
    
    formatted_data.append(new_row)

# ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
print("üóëÔ∏è ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...")
sheet.clear()

# ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
print("üìù ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö...")
if formatted_data:
    sheet.update(range_name='A1', values=formatted_data)

# ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡πâ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°
print("üé® ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡πâ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°...")
try:
    # ‡∏ó‡∏≥‡πÉ‡∏´‡πâ header ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏≤‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
    sheet.format('A1:I1', {
        'textFormat': {
            'bold': True,
            'fontSize': 12
        },
        'backgroundColor': {
            'red': 0.2, 
            'green': 0.6, 
            'blue': 0.9
        },
        'horizontalAlignment': 'CENTER',
        'verticalAlignment': 'MIDDLE'
    })
    
    # ‡∏à‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
    sheet.format('A:A', {'columnWidth': 100})   # Order ID
    sheet.format('B:B', {'columnWidth': 160})   # ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà-‡πÄ‡∏ß‡∏•‡∏≤
    sheet.format('C:C', {'columnWidth': 220})   # ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    sheet.format('D:D', {'columnWidth': 80})    # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
    sheet.format('E:E', {'columnWidth': 120})   # ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢
    sheet.format('F:F', {'columnWidth': 120})   # ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°
    sheet.format('G:G', {'columnWidth': 180})   # ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏û‡∏¥‡πÄ‡∏®‡∏©
    sheet.format('H:H', {'columnWidth': 180})   # ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
    sheet.format('I:I', {'columnWidth': 100})   # ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
    
    # ‡∏à‡∏±‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    if len(formatted_data) > 1:
        data_range = f'A2:I{len(formatted_data)}'
        sheet.format(data_range, {
            'horizontalAlignment': 'LEFT',
            'verticalAlignment': 'MIDDLE'
        })
        
        # ‡∏à‡∏±‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á
        sheet.format(f'D2:F{len(formatted_data)}', {
            'horizontalAlignment': 'CENTER'
        })
    
    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏™‡πâ‡∏ô‡∏Ç‡∏≠‡∏ö
    if len(formatted_data) > 1:
        sheet.format(f'A1:I{len(formatted_data)}', {
            'borders': {
                'top': {'style': 'SOLID'},
                'bottom': {'style': 'SOLID'},
                'left': {'style': 'SOLID'},
                'right': {'style': 'SOLID'}
            }
        })
    
    print("‚úÖ ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô")
except Exception as e:
    print(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏î‡πâ: {e}")

# ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
print(f"\nüìã ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:")
print(f"   üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {len(formatted_data)-1} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")

# ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡πÅ‡∏ï‡πà‡∏•‡∏∞ Order
order_summary = {}
for item in all_items:
    order_id = item[0]
    if order_id not in order_summary:
        order_summary[order_id] = {'count': 0, 'total': 0}
    order_summary[order_id]['count'] += 1
    order_summary[order_id]['total'] += item[5]

print(f"   üì¶ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Orders: {len(order_summary)} orders")
print(f"\nüìä ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏ï‡πà‡∏•‡∏∞ Order:")
for order_id in sorted(order_summary.keys()):
    count = order_summary[order_id]['count']
    total = int(order_summary[order_id]['total'])
    print(f"   Order {order_id}: {count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£, ‡∏£‡∏ß‡∏° {total:,} ‡∏ö‡∏≤‡∏ó")

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Order 170 ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞
order_170_items = [item for item in all_items if item[0] == 170]
if order_170_items:
    print(f"\nüéØ Order 170 ‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:")
    for i, item in enumerate(order_170_items, 1):
        print(f"   {i}. {item[2]} - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {item[3]}, ‡∏£‡∏≤‡∏Ñ‡∏≤: {int(item[5])} ‡∏ö‡∏≤‡∏ó")
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ "‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏≤‡∏∞+‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏á‡∏≤‡∏∞" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    has_rambutan = any('‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏≤‡∏∞+‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏á‡∏≤‡∏∞' in item[2] for item in order_170_items)
    print(f"   ‚úÖ ‡∏°‡∏µ '‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏≤‡∏∞+‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏á‡∏≤‡∏∞': {'‡πÉ‡∏ä‡πà' if has_rambutan else '‡πÑ‡∏°‡πà'}")

conn.close()
print(f"\n‚úÖ ‡∏à‡∏±‡∏î‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö Google Sheets ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß!")
print(f"üì± ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏≤‡∏° Order ID ‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö")