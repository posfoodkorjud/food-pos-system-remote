#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
from googleapiclient.discovery import build
from google.oauth2.service_account import Credentials
from collections import defaultdict

# ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheets
SCOPES = ['https://www.googleapis.com/auth/spreadsheets']
credentials = Credentials.from_service_account_file('credentials.json', scopes=SCOPES)
service = build('sheets', 'v4', credentials=credentials)

# ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
with open('google_sheets_config.json', 'r', encoding='utf-8') as f:
    config = json.load(f)

spreadsheet_id = config['spreadsheet_id']

print("üßπ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥‡πÉ‡∏ô Google Sheets...")

# ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
result = service.spreadsheets().values().get(
    spreadsheetId=spreadsheet_id,
    range='Orders!A:I'
).execute()

values = result.get('values', [])

if len(values) <= 1:
    print("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡πâ‡∏≤‡∏á")
    exit()

header = values[0]
data_rows = values[1:]

print(f"‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {len(data_rows)} ‡πÅ‡∏ñ‡∏ß")

# ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏° Order ID
orders = defaultdict(list)
for i, row in enumerate(data_rows):
    if len(row) > 0 and row[0] and not row[0].startswith('‡∏£‡∏ß‡∏°'):
        order_id = str(row[0])
        orders[order_id].append((i + 2, row))  # +2 ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ index ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å 0 ‡πÅ‡∏•‡∏∞‡∏°‡∏µ header

print(f"‡∏û‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô: {len(orders)} ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå")

# ‡∏´‡∏≤‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥
duplicate_orders = {}
for order_id, rows in orders.items():
    if len(rows) > 9:  # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 9 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (Order 170 ‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ 9 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)
        duplicate_orders[order_id] = rows
        print(f"Order {order_id}: ‡∏û‡∏ö {len(rows)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ 9 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)")

if not duplicate_orders:
    print("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥")
    exit()

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ã‡πâ‡∏≥
clean_data = [header]  # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡πâ‡∏ß‡∏¢ header

for order_id, rows in orders.items():
    if order_id in duplicate_orders:
        # ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞ 9 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏Å
        print(f"‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Order {order_id}: ‡πÄ‡∏Å‡πá‡∏ö 9 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏Å ‡∏à‡∏≤‡∏Å {len(rows)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
        for i in range(min(9, len(rows))):
            clean_data.append(rows[i][1])  # [1] ‡∏Ñ‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ñ‡∏ß (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà index)
    else:
        # ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        for row_index, row_data in rows:
            clean_data.append(row_data)

print(f"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏á‡∏•‡πâ‡∏≤‡∏á: {len(clean_data) - 1} ‡πÅ‡∏ñ‡∏ß (‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏° header)")

# ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
print("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Google Sheets...")

# ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤
service.spreadsheets().values().clear(
    spreadsheetId=spreadsheet_id,
    range='Orders!A:I'
).execute()

# ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
service.spreadsheets().values().update(
    spreadsheetId=spreadsheet_id,
    range='Orders!A1',
    valueInputOption='USER_ENTERED',
    body={'values': clean_data}
).execute()

print("‚úÖ ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!")
print(f"üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {len(clean_data) - 1} ‡πÅ‡∏ñ‡∏ß")
print(f"üîó ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà: https://docs.google.com/spreadsheets/d/{spreadsheet_id}/edit")

# ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
final_orders = defaultdict(int)
for row in clean_data[1:]:  # ‡∏Ç‡πâ‡∏≤‡∏° header
    if len(row) > 0 and row[0] and not row[0].startswith('‡∏£‡∏ß‡∏°'):
        order_id = str(row[0])
        final_orders[order_id] += 1

print("\nüìã ‡∏™‡∏£‡∏∏‡∏õ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏á‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:")
for order_id, count in sorted(final_orders.items()):
    print(f"  Order {order_id}: {count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")