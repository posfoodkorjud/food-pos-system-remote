import requests
import json
import time
import sqlite3

def test_order_with_special_options():
    base_url = "http://localhost:5000"
    
    # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏¥‡πÄ‡∏®‡∏©
    order_data = {
        "table_id": 99,
        "items": [
            {
                "item_id": 1,  # ‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î
                "quantity": 1,
                "selected_option": "‡∏´‡∏ß‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥",  # ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏¥‡πÄ‡∏®‡∏©
                "notes": "‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡∏ú‡∏±‡∏Å‡∏ä‡∏µ"  # ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
            },
            {
                "item_id": 8,  # ‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏∞‡πÄ‡∏û‡∏£‡∏≤‡∏ó‡∏∞‡πÄ‡∏•
                "quantity": 1,
                "selected_option": "‡πÄ‡∏ú‡πá‡∏î‡∏ô‡πâ‡∏≠‡∏¢",  # ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏¥‡πÄ‡∏®‡∏©
                "notes": "‡πÉ‡∏™‡πà‡πÑ‡∏Ç‡πà‡∏î‡∏≤‡∏ß"  # ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
            }
        ]
    }
    
    print("üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡πà‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏¥‡πÄ‡∏®‡∏©")
    print(f"üì§ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á: {json.dumps(order_data, ensure_ascii=False, indent=2)}")
    
    try:
        # ‡∏™‡πà‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå
        response = requests.post(f"{base_url}/api/orders", json=order_data)
        print(f"\nüì® Response Status: {response.status_code}")
        print(f"üì® Response Body: {response.text}")
        
        if response.status_code == 200:
            result = response.json()
            order_id = result.get('order_id')
            print(f"\n‚úÖ ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! Order ID: {order_id}")
            
            # ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            time.sleep(1)
            check_database_for_order(order_id)
        else:
            print(f"\n‚ùå ‡∏™‡πà‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

def check_database_for_order(order_id):
    print(f"\nüîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Order ID: {order_id}")
    
    try:
        conn = sqlite3.connect('backend/pos_database.db')
        cursor = conn.cursor()
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå
        cursor.execute("""
            SELECT order_id, table_id, status, total_amount, created_at 
            FROM orders 
            WHERE order_id = ?
        """, (order_id,))
        
        order = cursor.fetchone()
        if order:
            print(f"üìã ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå: ID={order[0]}, Table={order[1]}, Status={order[2]}, Total={order[3]}‡∏ø, Time={order[4]}")
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£
            cursor.execute("""
                SELECT oi.item_id, oi.quantity, oi.unit_price, oi.total_price, oi.customer_request,
                       m.name
                FROM order_items oi
                JOIN menu_items m ON oi.item_id = m.item_id
                WHERE oi.order_id = ?
                ORDER BY oi.order_item_id
            """, (order_id,))
            
            items = cursor.fetchall()
            print(f"\nüìù ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ({len(items)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£):")
            
            for i, item in enumerate(items, 1):
                print(f"\n{i}. {item[5]} (ID: {item[0]})")
                print(f"   ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {item[1]}")
                print(f"   ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πà‡∏ß‡∏¢: {item[2]}‡∏ø")
                print(f"   ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°: {item[3]}‡∏ø")
                print(f"   Customer Request: '{item[4]}'")
                
                # ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå customer_request
                if item[4]:
                    if '|' in item[4]:
                        parts = item[4].split('|')
                        print(f"   üìä ‡πÅ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:")
                        if len(parts) >= 1 and parts[0].strip():
                            print(f"     ‚úÖ ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏¥‡πÄ‡∏®‡∏©: '{parts[0].strip()}'")
                        if len(parts) >= 2 and parts[1].strip():
                            print(f"     ‚úÖ ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: '{parts[1].strip()}'")
                    else:
                        print(f"   üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏µ‡∏¢‡∏ß: '{item[4]}'")
                else:
                    print(f"   ‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ customer_request (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏π‡∏ç‡∏´‡∏≤‡∏¢!)")
        else:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå ID {order_id} ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: {e}")

if __name__ == '__main__':
    test_order_with_special_options()