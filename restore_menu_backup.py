#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö restore ‡πÄ‡∏°‡∏ô‡∏π‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå backup
‚ö†Ô∏è ‡πÉ‡∏ä‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏∞‡∏°‡∏±‡∏î‡∏£‡∏∞‡∏ß‡∏±‡∏á!
"""

import sqlite3
import shutil
import os
import json
from datetime import datetime
import glob

def list_backup_files():
    """‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå backup ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà"""
    backup_dir = "menu_backups"
    
    if not os.path.exists(backup_dir):
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå backup")
        return []
    
    # ‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå backup ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    db_backups = glob.glob(os.path.join(backup_dir, "pos_database_backup_*.db"))
    json_backups = glob.glob(os.path.join(backup_dir, "menu_data_backup_*.json"))
    
    print("üìã ‡πÑ‡∏ü‡∏•‡πå backup ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà:")
    print("\nüóÑÔ∏è Database backups:")
    for i, backup in enumerate(db_backups, 1):
        filename = os.path.basename(backup)
        timestamp = filename.replace("pos_database_backup_", "").replace(".db", "")
        formatted_time = datetime.strptime(timestamp, "%Y%m%d_%H%M%S").strftime("%Y-%m-%d %H:%M:%S")
        print(f"  {i}. {filename} ({formatted_time})")
    
    print("\nüìÑ JSON backups:")
    for i, backup in enumerate(json_backups, 1):
        filename = os.path.basename(backup)
        timestamp = filename.replace("menu_data_backup_", "").replace(".json", "")
        formatted_time = datetime.strptime(timestamp, "%Y%m%d_%H%M%S").strftime("%Y-%m-%d %H:%M:%S")
        print(f"  {i}. {filename} ({formatted_time})")
    
    return db_backups, json_backups

def restore_database_backup(backup_file):
    """Restore ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå backup"""
    
    db_path = "A_FOOD_POS/FOOD_POS/pos_database.db"
    
    if not os.path.exists(backup_file):
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå backup: {backup_file}")
        return False
    
    try:
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á backup ‡∏Ç‡∏≠‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô restore
        current_backup = f"pos_database_before_restore_{datetime.now().strftime('%Y%m%d_%H%M%S')}.db"
        shutil.copy2(db_path, current_backup)
        print(f"‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á backup ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {current_backup}")
        
        # Restore ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        shutil.copy2(backup_file, db_path)
        print(f"‚úÖ Restore ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å: {backup_file}")
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        cursor.execute("SELECT COUNT(*) FROM menu_items WHERE is_available = 1")
        menu_count = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM menu_categories WHERE is_active = 1")
        category_count = cursor.fetchone()[0]
        
        conn.close()
        
        print(f"üìä ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏´‡∏•‡∏±‡∏á restore:")
        print(f"  - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà: {category_count}")
        print(f"  - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏°‡∏ô‡∏π: {menu_count}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ restore: {e}")
        return False

def view_backup_info(json_backup_file):
    """‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô backup JSON"""
    
    if not os.path.exists(json_backup_file):
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå: {json_backup_file}")
        return
    
    try:
        with open(json_backup_file, 'r', encoding='utf-8') as f:
            data = json.load(f)
        
        print(f"üìÑ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô backup: {os.path.basename(json_backup_file)}")
        print(f"üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á: {data.get('backup_date', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏')}")
        
        if 'summary' in data:
            summary = data['summary']
            print(f"üìä ‡∏™‡∏£‡∏∏‡∏õ:")
            print(f"  - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {summary.get('total_menu_items', 0)}")
            print(f"  - ‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡∏≤‡∏¢: {summary.get('available_items', 0)}")
            if 'price_range' in summary:
                price_range = summary['price_range']
                print(f"  - ‡∏ä‡πà‡∏ß‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤: {price_range.get('min', 0)}-{price_range.get('max', 0)} ‡∏ö‡∏≤‡∏ó")
        
        if 'categories' in data:
            print(f"üìÇ ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà: {len(data['categories'])} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
            for cat in data['categories'][:5]:  # ‡πÅ‡∏™‡∏î‡∏á 5 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏Å
                print(f"  - {cat.get('name', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠')}")
            if len(data['categories']) > 5:
                print(f"  ... ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å {len(data['categories']) - 5} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
        
        if 'menu_items' in data:
            print(f"üçΩÔ∏è ‡πÄ‡∏°‡∏ô‡∏π: {len(data['menu_items'])} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
            for item in data['menu_items'][:5]:  # ‡πÅ‡∏™‡∏î‡∏á 5 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏Å
                name = item.get('name', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠')
                price = item.get('price', 0)
                print(f"  - {name} ({price} ‡∏ö‡∏≤‡∏ó)")
            if len(data['menu_items']) > 5:
                print(f"  ... ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å {len(data['menu_items']) - 5} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå: {e}")

def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å"""
    print("üîÑ ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠ Restore Menu Backup")
    print("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏∞‡∏°‡∏±‡∏î‡∏£‡∏∞‡∏ß‡∏±‡∏á!")
    print("="*50)
    
    db_backups, json_backups = list_backup_files()
    
    if not db_backups and not json_backups:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå backup")
        return
    
    print("\nüìã ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£:")
    print("1. ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô JSON backup")
    print("2. Restore ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å DB backup (‚ö†Ô∏è ‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢!)")
    print("3. ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°")
    
    choice = input("\n‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (1-3): ").strip()
    
    if choice == "1":
        if json_backups:
            print("\n‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå JSON backup:")
            for i, backup in enumerate(json_backups, 1):
                filename = os.path.basename(backup)
                print(f"{i}. {filename}")
            
            try:
                file_choice = int(input("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå (‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç): ")) - 1
                if 0 <= file_choice < len(json_backups):
                    view_backup_info(json_backups[file_choice])
                else:
                    print("‚ùå ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
            except ValueError:
                print("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç")
        else:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå JSON backup")
    
    elif choice == "2":
        print("\n‚ö†Ô∏è ‡∏Å‡∏≤‡∏£ restore ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏∞‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô!")
        confirm = input("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ (‡∏û‡∏¥‡∏°‡∏û‡πå 'YES' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô): ")
        
        if confirm == "YES":
            if db_backups:
                print("\n‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå DB backup:")
                for i, backup in enumerate(db_backups, 1):
                    filename = os.path.basename(backup)
                    print(f"{i}. {filename}")
                
                try:
                    file_choice = int(input("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå (‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç): ")) - 1
                    if 0 <= file_choice < len(db_backups):
                        restore_database_backup(db_backups[file_choice])
                        print("\n‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ restart server ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏°‡∏µ‡∏ú‡∏•")
                    else:
                        print("‚ùå ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
                except ValueError:
                    print("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç")
            else:
                print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå DB backup")
        else:
            print("‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£ restore")
    
    elif choice == "3":
        print("üëã ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°")
    
    else:
        print("‚ùå ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")

if __name__ == "__main__":
    main()