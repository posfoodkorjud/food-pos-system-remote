import sqlite3
import os

# ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏ö
db_path = 'A_FOOD_POS/FOOD_POS/pos_database.db'
if not os.path.exists(db_path):
    db_path = 'A_FOOD_POS/pos_database.db'
    if not os.path.exists(db_path):
        print("‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
        exit(1)

print(f"‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô: {db_path}")
print("=" * 60)

try:
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏°‡∏ô‡∏π‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    cursor.execute('SELECT COUNT(*) FROM menu_items WHERE is_available = 1')
    current_count = cursor.fetchone()[0]
    print(f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏°‡∏ô‡∏π‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {current_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    print(f"‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏ö: {current_count - 77} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ 77 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    print()
    
    # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏π‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î (‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£)
    print("1. ‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏π‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î (‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°):")
    cursor.execute('''
        SELECT mi.item_id, mi.name, mc.name as category, mi.price
        FROM menu_items mi
        JOIN menu_categories mc ON mi.category_id = mc.category_id
        WHERE mi.is_available = 1
        ORDER BY mi.price DESC
        LIMIT 10
    ''')
    expensive_menus = cursor.fetchall()
    
    for item_id, name, category, price in expensive_menus:
        print(f"   ID {item_id}: {name} ({category}) - ‡∏ø{price}")
    
    # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö)
    print("\n2. ‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö):")
    cursor.execute('''
        SELECT mi.item_id, mi.name, mc.name as category, mi.price, mi.created_at
        FROM menu_items mi
        JOIN menu_categories mc ON mi.category_id = mc.category_id
        WHERE mi.is_available = 1 AND mi.created_at IS NOT NULL
        ORDER BY mi.created_at DESC
        LIMIT 10
    ''')
    recent_menus = cursor.fetchall()
    
    for item_id, name, category, price, created_at in recent_menus:
        print(f"   ID {item_id}: {name} ({category}) - ‡∏ø{price} [‡∏™‡∏£‡πâ‡∏≤‡∏á: {created_at}]")
    
    # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Å‡∏±‡∏ô (‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏ã‡πâ‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢)
    print("\n3. ‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Å‡∏±‡∏ô:")
    cursor.execute('''
        SELECT mi.item_id, mi.name, mc.name as category, mi.price
        FROM menu_items mi
        JOIN menu_categories mc ON mi.category_id = mc.category_id
        WHERE mi.is_available = 1
        ORDER BY mi.name
    ''')
    all_menus = cursor.fetchall()
    
    # ‡∏´‡∏≤‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Å‡∏±‡∏ô
    similar_groups = {}
    for item_id, name, category, price in all_menus:
        # ‡∏´‡∏≤‡∏Ñ‡∏≥‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏ô‡∏π
        words = name.replace('‡∏Ç‡πâ‡∏≤‡∏ß', '').replace('‡∏ô‡πâ‡∏≥', '').replace('‡∏ú‡∏±‡∏î', '').strip()
        if len(words) > 3:  # ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 3 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
            key = words[:6]  # ‡πÉ‡∏ä‡πâ 6 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÅ‡∏£‡∏Å‡πÄ‡∏õ‡πá‡∏ô key
            if key not in similar_groups:
                similar_groups[key] = []
            similar_groups[key].append((item_id, name, category, price))
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    for key, items in similar_groups.items():
        if len(items) > 1:
            print(f"   ‡∏Å‡∏•‡∏∏‡πà‡∏° '{key}':")
            for item_id, name, category, price in items:
                print(f"     ID {item_id}: {name} ({category}) - ‡∏ø{price}")
    
    # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏°‡∏ô‡∏π‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
    print("\n4. ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏°‡∏ô‡∏π‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î:")
    cursor.execute('''
        SELECT mc.name, COUNT(mi.item_id) as count
        FROM menu_categories mc
        LEFT JOIN menu_items mi ON mc.category_id = mi.category_id AND mi.is_available = 1
        WHERE mc.is_active = 1
        GROUP BY mc.name
        ORDER BY count DESC
    ''')
    category_counts = cursor.fetchall()
    
    for cat_name, count in category_counts:
        print(f"   {cat_name}: {count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
        if count > 20:  # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 20 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
            cursor.execute('''
                SELECT mi.item_id, mi.name, mi.price
                FROM menu_items mi
                JOIN menu_categories mc ON mi.category_id = mc.category_id
                WHERE mc.name = ? AND mi.is_available = 1
                ORDER BY mi.price DESC
                LIMIT 5
            ''', (cat_name,))
            expensive_in_cat = cursor.fetchall()
            print(f"     ‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡πÅ‡∏û‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÉ‡∏ô{cat_name}:")
            for item_id, name, price in expensive_in_cat:
                print(f"       ID {item_id}: {name} - ‡∏ø{price}")
    
    print("\n" + "=" * 60)
    print("üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:")
    print("1. ‡∏•‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏π‡∏á‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥ (‡πÄ‡∏ä‡πà‡∏ô ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 200 ‡∏ö‡∏≤‡∏ó)")
    print("2. ‡∏•‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏ã‡∏∂‡πà‡∏á‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö")
    print("3. ‡∏•‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏ã‡πâ‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢")
    print("4. ‡∏•‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏ö‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏°‡∏ô‡∏π‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ")
    
    conn.close()
    
except Exception as e:
    print(f'‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}')