#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á backup ‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏•‡∏∞‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• POS
‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏ç‡∏´‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
"""

import sqlite3
import shutil
import os
from datetime import datetime
import json

def create_menu_backup():
    """‡∏™‡∏£‡πâ‡∏≤‡∏á backup ‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏•‡∏∞‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"""
    
    # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå
    db_path = "A_FOOD_POS/FOOD_POS/pos_database.db"
    backup_dir = "menu_backups"
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå backup ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
    if not os.path.exists(backup_dir):
        os.makedirs(backup_dir)
        print(f"‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå {backup_dir} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå backup ‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    backup_db_path = os.path.join(backup_dir, f"pos_database_backup_{timestamp}.db")
    
    try:
        # 1. Backup ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        shutil.copy2(db_path, backup_db_path)
        print(f"‚úÖ Backup ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: {backup_db_path}")
        
        # 2. Export ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏õ‡πá‡∏ô JSON
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
        cursor.execute("SELECT * FROM category WHERE is_active = 1")
        categories = cursor.fetchall()
        categories_data = []
        for cat in categories:
            categories_data.append({
                "id": cat[0],
                "name": cat[1],
                "is_active": cat[2]
            })
        
        # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏ô‡∏π
        cursor.execute("SELECT * FROM menu_item WHERE is_available = 1")
        menu_items = cursor.fetchall()
        menu_data = []
        for item in menu_items:
            menu_data.append({
                "id": item[0],
                "name": item[1],
                "price": item[2],
                "category_id": item[3],
                "is_available": item[4]
            })
        
        conn.close()
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå JSON backup
        backup_data = {
            "backup_date": datetime.now().isoformat(),
            "categories": categories_data,
            "menu_items": menu_data,
            "summary": {
                "total_categories": len(categories_data),
                "total_menu_items": len(menu_data)
            }
        }
        
        json_backup_path = os.path.join(backup_dir, f"menu_data_backup_{timestamp}.json")
        with open(json_backup_path, 'w', encoding='utf-8') as f:
            json.dump(backup_data, f, ensure_ascii=False, indent=2)
        
        print(f"‚úÖ Backup ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏ô‡∏π JSON: {json_backup_path}")
        
        # 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏£‡∏∏‡∏õ backup
        summary_path = os.path.join(backup_dir, f"backup_summary_{timestamp}.txt")
        with open(summary_path, 'w', encoding='utf-8') as f:
            f.write(f"=== MENU BACKUP SUMMARY ===\n")
            f.write(f"‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á backup: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
            f.write(f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà: {len(categories_data)}\n")
            f.write(f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏°‡∏ô‡∏π: {len(menu_data)}\n\n")
            
            f.write("‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:\n")
            for cat in categories_data:
                f.write(f"- {cat['name']} (ID: {cat['id']})\n")
            
            f.write("\n‡∏ä‡πà‡∏ß‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏°‡∏ô‡∏π:\n")
            prices = [item['price'] for item in menu_data]
            f.write(f"- ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î: {min(prices)} ‡∏ö‡∏≤‡∏ó\n")
            f.write(f"- ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î: {max(prices)} ‡∏ö‡∏≤‡∏ó\n")
            
            f.write(f"\n‡πÑ‡∏ü‡∏•‡πå backup:\n")
            f.write(f"- Database: {backup_db_path}\n")
            f.write(f"- JSON: {json_backup_path}\n")
            f.write(f"- Summary: {summary_path}\n")
        
        print(f"‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏£‡∏∏‡∏õ: {summary_path}")
        
        print("\n" + "="*50)
        print("üéâ ‡∏™‡∏£‡πâ‡∏≤‡∏á BACKUP ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")
        print(f"üìÅ ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå backup: {backup_dir}")
        print(f"üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà: {len(categories_data)}")
        print(f"üçΩÔ∏è ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏°‡∏ô‡∏π: {len(menu_data)}")
        print("="*50)
        
        return True
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á backup: {e}")
        return False

def restore_menu_from_backup(backup_file):
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö restore ‡πÄ‡∏°‡∏ô‡∏π‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå backup (‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô)"""
    print(f"‚ö†Ô∏è ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô restore_menu_from_backup ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
    print(f"üìÑ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ restore ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå: {backup_file}")
    print("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏∞‡∏°‡∏±‡∏î‡∏£‡∏∞‡∏ß‡∏±‡∏á!")

if __name__ == "__main__":
    print("üîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á backup ‡πÄ‡∏°‡∏ô‡∏π...")
    success = create_menu_backup()
    
    if success:
        print("\nüí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:")
        print("- ‡∏™‡∏£‡πâ‡∏≤‡∏á backup ‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏°‡∏ô‡∏π")
        print("- ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå backup ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢")
        print("- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå backup ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏¢‡∏∞")
    else:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á backup ‡πÑ‡∏î‡πâ")